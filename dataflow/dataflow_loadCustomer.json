{
	"name": "dataflow_loadCustomer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "tbl_Customer",
						"type": "DatasetReference"
					},
					"name": "CustomerStream"
				},
				{
					"dataset": {
						"referenceName": "tbl_Store",
						"type": "DatasetReference"
					},
					"name": "StoreStream"
				},
				{
					"dataset": {
						"referenceName": "tbl_Product",
						"type": "DatasetReference"
					},
					"name": "ProductStream"
				},
				{
					"dataset": {
						"referenceName": "tbl_ProductModel",
						"type": "DatasetReference"
					},
					"name": "ProductModelStream"
				},
				{
					"dataset": {
						"referenceName": "tbl_ProductSubcategory",
						"type": "DatasetReference"
					},
					"name": "ProductSubcategoryStream"
				},
				{
					"dataset": {
						"referenceName": "tbl_DimProductMaxProductSK",
						"type": "DatasetReference"
					},
					"name": "DimProductStream"
				},
				{
					"dataset": {
						"referenceName": "tbl_dimProduct",
						"type": "DatasetReference"
					},
					"name": "AnalyticDimProductStream"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable2",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticstblDimProduct",
						"type": "DatasetReference"
					},
					"name": "DimProduct"
				},
				{
					"name": "ProductSKCache"
				}
			],
			"transformations": [
				{
					"name": "joinCustomerStore"
				},
				{
					"name": "selectColumns"
				},
				{
					"name": "JoinProductProductModel"
				},
				{
					"name": "joinProductSubcategory"
				},
				{
					"name": "selectColumnsProduct"
				},
				{
					"name": "removeProductsNulls"
				},
				{
					"name": "removeProductModelIDNulls"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumnnewProductSK"
				},
				{
					"name": "existsProductId"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          PersonID as integer,",
				"          StoreID as integer,",
				"          TerritoryID as integer,",
				"          AccountNumber as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerStream",
				"source(output(",
				"          BusinessEntityID as integer,",
				"          Name as string,",
				"          SalesPersonID as integer,",
				"          Demographics as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> StoreStream",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          MakeFlag as boolean,",
				"          FinishedGoodsFlag as boolean,",
				"          Color as string,",
				"          SafetyStockLevel as integer,",
				"          ReorderPoint as integer,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          SizeUnitMeasureCode as string,",
				"          WeightUnitMeasureCode as string,",
				"          Weight as decimal(8,2),",
				"          DaysToManufacture as integer,",
				"          ProductLine as string,",
				"          Class as string,",
				"          Style as string,",
				"          ProductSubcategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductStream",
				"source(output(",
				"          ProductModelID as integer,",
				"          Name as string,",
				"          CatalogDescription as string,",
				"          Instructions as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductModelStream",
				"source(output(",
				"          ProductSubcategoryID as integer,",
				"          ProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductSubcategoryStream",
				"source(output(",
				"          ProductSK as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT MAX(productSK) AS ProductSK FROM dbo.DimProduct',",
				"     format: 'query',",
				"     staged: true) ~> DimProductStream",
				"source(output(",
				"          ProductSK as integer,",
				"          ProductID as integer,",
				"          ProductModelID as integer,",
				"          ProductSubcategoryID as integer,",
				"          ProductName as string,",
				"          SafetyStockLevel as integer,",
				"          ProductModelName as string,",
				"          ProductSubCategoryName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> AnalyticDimProductStream",
				"CustomerStream, StoreStream join(StoreID == BusinessEntityID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCustomerStore",
				"joinCustomerStore select(mapColumn(",
				"          CustomerID,",
				"          StoreID,",
				"          BusinessEntityID,",
				"          Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumns",
				"ProductStream, ProductModelStream join(ProductStream@ProductModelID == ProductModelStream@ProductModelID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinProductProductModel",
				"JoinProductProductModel, ProductSubcategoryStream join(ProductStream@ProductSubcategoryID == ProductSubcategoryStream@ProductSubcategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinProductSubcategory",
				"joinProductSubcategory select(mapColumn(",
				"          ProductID,",
				"          ProductName = ProductStream@Name,",
				"          SafetyStockLevel,",
				"          ProductModelID = ProductStream@ProductModelID,",
				"          ProductModelName = ProductModelStream@Name,",
				"          ProductSubCategoryName = ProductSubcategoryStream@Name,",
				"          ProductSubcategoryID = ProductStream@ProductSubcategoryID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumnsProduct",
				"selectColumns alterRow(deleteIf(isNull(BusinessEntityID))) ~> removeProductsNulls",
				"selectColumnsProduct alterRow(deleteIf(isNull(ProductModelID))) ~> removeProductModelIDNulls",
				"existsProductId keyGenerate(output(ProductSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(ProductSK = ProductSK + iifNull(ProductSKCache#outputs()[1].ProductSK, 0)) ~> derivedColumnnewProductSK",
				"removeProductModelIDNulls, AnalyticDimProductStream exists(selectColumnsProduct@ProductID == AnalyticDimProductStream@ProductID,",
				"     negate:true,",
				"     broadcast: 'auto')~> existsProductId",
				"removeProductsNulls sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          StoreID as integer,",
				"          BusinessEntityID as integer,",
				"          StoreName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID,",
				"          StoreID,",
				"          BusinessEntityID,",
				"          StoreName = Name",
				"     )) ~> DimCustomer",
				"derivedColumnnewProductSK sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductSK as integer,",
				"          ProductID as integer,",
				"          ProductModelID as integer,",
				"          ProductSubcategoryID as integer,",
				"          ProductName as string,",
				"          SafetyStockLevel as integer,",
				"          ProductModelName as string,",
				"          ProductSubCategoryName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID,",
				"          ProductModelID,",
				"          ProductSubcategoryID,",
				"          ProductName,",
				"          SafetyStockLevel,",
				"          ProductModelName,",
				"          ProductSubCategoryName,",
				"          ProductSK",
				"     )) ~> DimProduct",
				"DimProductStream sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          ProductSK",
				"     )) ~> ProductSKCache"
			]
		}
	}
}